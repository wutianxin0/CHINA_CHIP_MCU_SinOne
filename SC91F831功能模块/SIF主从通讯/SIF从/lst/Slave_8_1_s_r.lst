C51 COMPILER V9.03   SLAVE_8_1_S_R                                                         04/16/2014 15:28:23 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE SLAVE_8_1_S_R
OBJECT MODULE PLACED IN .\output\Slave_8_1_s_r.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE c\Slave_8_1_s_r.C BROWSE DEBUG OBJECTEXTEND PRINT(.\lst\Slave_8_1_s_r.lst) 
                    -OBJECT(.\output\Slave_8_1_s_r.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c) 深圳市赛元微电子有限公司
   3          //      文件名称        : slave_8_1.c
   4          //      作者            : 
   5          //      模块功能        : SIF slave 8+1发送――接收模块
   6          //      局部函数列表:
   7          //  最后更正日期:
   8          //      版本            :
   9          //      更改记录        : 主机接收从机发来的data,并将该data又发送给从机，从机接收完毕，主机发送stop
  10          //*************************************************************
  11          #include "H\SC91F832_C.H"
  12          
  13          //============================
  14          //模块内常量定义
  15          //============================
  16          #define         SIF_SLAVE_RECE_ACK              0x08            //SIF从8+1接收模式
  17          #define         SIF_SLAVE_SEND_ACK              0x0a            //SIF从8+1发送模式
  18          
  19          
  20          #define         BS(SFR,NUM)             (SFR|=(1<<NUM))
  21          #define         BC(SFR,NUM)             (SFR&=~(1<<NUM))
  22          
  23          #define         SIF_SET_RECE    (BC(SIFCFG,1))            //设置SIF接收状态
  24          #define         SIF_SET_SEND    (BS(SIFCFG,1))            //设置SIF发送状态
  25          
  26          //=====================================
  27          //声明需要调用的全局变量
  28          //=====================================
  29          extern          unsigned char Sif_Send_dat ;    //从机发送的数据
  30          extern          unsigned char Sif_Rece_dat;             //从机接收的数据 
  31           
  32          //*************************************************************
  33          // 函数名       ：void sif_init(void)
  34          // 作者         ：
  35          // 功能         ：sif初始化
  36          // 参数         ：无
  37          // 返回值       ：无
  38          // 调用全局变量：无
  39          // 修改全局变量：无
  40          // 备注         ：
  41          //**************************************************************
  42          void sif_init(void)
  43          {
  44   1              P1CFG1 &= 0xF0;         //设置P14、P15状态为准双向模式
  45   1              P1 |= 0x30;         //设置P14、P15输出高
  46   1              SIFCFG = SIF_SLAVE_SEND_ACK;  //选择SIF从8+1发送模式
  47   1              SIFCFG |= 0x80;         //打开SIF
  48   1              ESIF = 1;                       //开SIF中断     
  49   1      }
  50          
  51          //*************************************************************
  52          // 函数名       ：void Sif_Slave_Int() interrupt 5
  53          // 作者         ：
  54          // 功能         ：SIF 从模式中断机制
C51 COMPILER V9.03   SLAVE_8_1_S_R                                                         04/16/2014 15:28:23 PAGE 2   

  55          // 参数         ：无
  56          // 返回值       ：无
  57          // 调用全局变量：无
  58          // 修改全局变量：无
  59          // 备注         ：
  60          //**************************************************************
  61          void Sif_Slave_Int() interrupt 5
  62          {
  63   1              if(STRIF==1)
  64   1              {
  65   2                      STRIF = 0;                                      //接收完成start,中断标志清0     
  66   2                      SIFTXD = Sif_Send_dat;          //准备数据
  67   2                      SIF_SET_SEND;                           //slave切换为发送状态，发送1byte的数据
  68   2              }
  69   1              else if(TXIF==1)
  70   1              {
  71   2                      TXIF = 0;                                       //数据发送完成,中断标志清0
  72   2                      SIF_SET_RECE;                           //设置SIF为接收状态,接收主机发来的Data
  73   2                              
  74   2              }
  75   1              else if(RXIF==1)
  76   1              {
  77   2                      RXIF = 0;                                        //数据接收完成，中断标志清0
  78   2                      Sif_Rece_dat = SIFRXD;           //保存数据
  79   2      
  80   2              }
  81   1              else if(STPIF==1)
  82   1              {
  83   2                      STPIF=0;                                        //接收完成stop,中断标志清0
  84   2              
  85   2              }
  86   1                      
  87   1      }
  88          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     51    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
