C51 COMPILER V9.55   SSI0_INIT                                                             07/25/2019 10:27:12 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE SSI0_INIT
OBJECT MODULE PLACED IN .\Objects\SSI0_Init.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE c\SSI0_Init.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\SSI0_Init.lst) OBJECT(.\Objects\SSI0_Init.obj)

line level    source

   1          #include "H/Function_Init.H"
   2          
   3          //选择三合一模式：
   4          #define  Uart0   0
   5          #define  TWI0    1
   6          #define  SPI0    2
   7          
   8          #define  SSI0_Mode  SPI0
   9          
  10          void Uart0_Init(uint Freq,unsigned long int baud);
  11          void TWI0_Init(void);
  12          void SPI0_Init(void);
  13          
  14          bit Uart0SendFlag = 0;    //Uart0发送中断标志位
  15          bit Uart0ReceiveFlag = 0; //Uart0接收中断标志位
  16          bit SPI0Flag = 0;          //SPI0数据传输完成标志位
  17          bit TWI0Flag = 0;          //TWI0中断标志位
  18          
  19          /*****************************************************
  20          *函数名称：void SSI0_Test(void)
  21          *函数功能：SSI0测试
  22          *入口参数：void
  23          *出口参数：void
  24          *****************************************************/
  25          void SSI0_Test(void)
  26          {
  27   1      #if (SSI0_Mode == Uart0)
                      Uart0_Init(16,9600);
                      while(1)
                      {
                              SS0DAT = 0xAA;
                              while(!Uart0SendFlag);
                              Uart0SendFlag = 0;
                      }
              #endif
  36   1              
  37   1      #if (SSI0_Mode == TWI0)
                      TWI0_Init();
                      while(1)
                      {
                      }
              #endif
  43   1      
  44   1      #if (SSI0_Mode == SPI0)
  45   1              SPI0_Init();
  46   1              while(1)
  47   1              {
  48   2                      SS0DAT = 0xAA;
  49   2                      while(!SPI0Flag);
  50   2                      SPI0Flag = 0;
  51   2              }
  52   1      #endif  
  53   1      }
  54          
C51 COMPILER V9.55   SSI0_INIT                                                             07/25/2019 10:27:12 PAGE 2   

  55          /*****************************************************
  56          *函数名称：void Uart0_Init(uint Freq,unsigned long int baud)
  57          *函数功能：Uart0中断初始化
  58          *入口参数：Freq-主频，baud-波特率
  59          *出口参数：void
  60          *****************************************************/
  61          void Uart0_Init(uint Freq,unsigned long int baud)
  62          {
  63   1              P1CON &= 0xF3;                      //TX/RX设置为输入带上拉
  64   1              P1PH  |= 0x0C;
  65   1              
  66   1              OTCON |= 0x30;                      //串行接口SSI选择Uart0通信
  67   1              SS0CON0 = 0x50;                     //设置通信方式为模式一，允许接收
  68   1              SS0CON1 = Freq*1000000/baud;        //波特率低位控制
  69   1              SS0CON2 = (Freq*1000000/baud)>>8;   //波特率高位控制
  70   1              IE |= 0x10;                         //开启SSI中断
  71   1          EA = 1;     
  72   1      }
  73          
  74          /*****************************************************
  75          *函数名称：void TWI0_Init(void)
  76          *函数功能：TWI0初始化
  77          *入口参数：void
  78          *出口参数：void
  79          *****************************************************/
  80          void TWI0_Init(void)
  81          {
  82   1              OTCON |= 0x20;  //选择TWI0模式
  83   1              SS0CON0 = 0x80;  // ---- x---  0为不允许接收，1为允许接收
  84   1              SS0CON1 = 0x01;  //xxxx xxxy  x为地址寄存器，y为0禁止/1允许通用地址响应
  85   1              IE |= 0x10;
  86   1              EA = 1;
  87   1      }
  88          
  89          /*****************************************************
  90          *函数名称：void SPI0_Init(void)
  91          *函数功能：SPI0初始化
  92          *入口参数：void
  93          *出口参数：void
  94          *****************************************************/
  95          void SPI0_Init(void)
  96          {
  97   1              OTCON |= 0X10;  //选择SPI0模式
  98   1              SS0CON0 = 0x2f; //设置SPI0为主设备，SCK空闲时间为低电平，SCK周期第二沿采集数据，时钟速率为Fsys/128
  99   1              SS0CON1 = 0x01;   //允许发送中断
 100   1              SS0CON0 |= 0x80; //开启SPI
 101   1              IE |= 0x10;
 102   1              EA = 1;
 103   1      }
 104          
 105          
 106          /*****************************************************
 107          *函数名称：void TWI0/SPI0/UART0_Int() interrupt 7
 108          *函数功能：SSI中断函数
 109          *入口参数：void
 110          *出口参数：void
 111          *****************************************************/
 112          #if (SSI0_Mode == Uart0)
              void Uart0_INT() interrupt 4   //Uart1中断函数
              {
                      if(SS0CON0&0x02)    //发送标志位判断
                      {
C51 COMPILER V9.55   SSI0_INIT                                                             07/25/2019 10:27:12 PAGE 3   

                              SS0CON0 &= 0xFD;
                              Uart0SendFlag = 1;
                      }
                      if((SS0CON0&0x01))  //接收标志位判断
                      {
                              SS0CON0 &= 0xFE;
                              Uart0ReceiveFlag = 1;
                      }       
              }
              #endif
 127          
 128          #if (SSI0_Mode == TWI0)
              void TWI0_INT() interrupt 4     //TWI中断函数
              {
                      if(SS0CON0&0x40)
                      {
                              SS0CON0 &= 0xbf;  //中断清零
                              TWI0Flag = 1;
                      }       
              }
              #endif 
 138          
 139          #if (SSI0_Mode == SPI0)
 140          void SPI0INT(void) interrupt 4    //SPI中断函数
 141          {         
 142   1              if(SS0CON1&0X08)    //发送缓存器空标志判断
 143   1              {
 144   2                      SS0CON1 &= ~0X08;
 145   2              }
 146   1              if(SS0CON1&0X80)    //数据传输标志位判断
 147   1              {
 148   2                      SS0CON1 &= ~0X80;
 149   2                      SPI0Flag = 1;
 150   2              }
 151   1      }
 152          #endif 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    156    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
