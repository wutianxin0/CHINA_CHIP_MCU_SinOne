C51 COMPILER V9.55   ADC_INIT                                                              01/08/2019 14:28:58 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE ADC_INIT
OBJECT MODULE PLACED IN .\output\ADC_Init.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE c\ADC_Init.c OPTIMIZE(8,SPEED) BROWSE NOINTPROMOTE DEBUG OBJECTEXTEND PR
                    -INT(.\list\ADC_Init.lst) OBJECT(.\output\ADC_Init.obj)

line level    source

   1          #include "H/Function_Init.H"
   2          
   3          void ADC_Init(uint Channel);
   4          void Delay(uint time);
   5          uchar Read_IFB_Data(uchar AddOffset);
   6          uint ADCValue = 0x0000;
   7          uint AD_TS25H = 0x00;
   8          uint AD_TS25L = 0x00;
   9          bit AdcFlag = 0x00;
  10          unsigned char code *POINT=0x0000 ;      //定义一个指针
  11          
  12          /***********ADC采样口选择*************/
  13          #if (IC_MODEL == SC93F8433)
  14                  enum Channel {AIN0=0,AIN1,AIN2,AIN3,AIN4,AIN5,AIN6,AIN7,AIN8,AIN9,TS_AIN=14,VDD4};
  15          #endif
  16          
  17          #if (IC_MODEL == SC93F8432)
                      enum Channel {AIN2=2,AIN3,AIN4,AIN5,AIN8=8,AIN9,TS_AIN=14,VDD4};
              #endif
  20                  
  21          #if (IC_MODEL == SC93F8431)
                      enum Channel {AIN3=3,AIN4,AIN8=8,AIN9,TS_AIN=14,VDD4};
              #endif
  24          
  25          /****************************************
  26          *函数名称：void ADC_Test(void)
  27          *函数功能：ADC测试
  28          *入口参数：void
  29          *出口参数：void
  30          ****************************************/
  31          void ADC_Test(void)
  32          {
  33   1          ADC_Init(AIN4);
  34   1          while(1)
  35   1          {
  36   2              AD_TS25H = Read_IFB_Data(0x3E);      //读取IC在25°时的温度值（高位）
  37   2                  AD_TS25L = Read_IFB_Data(0x3F);      //读取IC在25°时的温度值（低位）
  38   2              
  39   2              ADCCON |= 0X40;                      //开始ADC转换
  40   2                  while(!(AdcFlag));                           //等待 ADC转换完成;
  41   2              AdcFlag = 0;
  42   2              ADCValue = ADCVH;
  43   2              ADCValue = (ADCValue<<4)+(ADCVL>>4);      
  44   2          }
  45   1      }
  46          
  47          /*****************************************************
  48          *函数名称：void ADC_Init(void)
  49          *函数功能：ADC初始化
  50          *入口参数：Channel
  51          *出口参数：void
  52          *****************************************************/
  53          void ADC_Init(uint Channel)
  54          {
C51 COMPILER V9.55   ADC_INIT                                                              01/08/2019 14:28:58 PAGE 2   

  55   1              ADCCON = 0X80|Channel;          //开启ADC，ADC采样频率为2M ,选择Channel位ADC采样口
  56   1              if(Channel<8)
  57   1              {
  58   2                      ADCCFG0 = 1<<Channel;   //设置Channel作为采样口
  59   2              }
  60   1              else
  61   1              {
  62   2                      ADCCFG1 = 1<<(Channel-8);   //设置Channel作为采样口
  63   2              }
  64   1              IE |= 0X40;        //开启ADC中断
  65   1              EA = 1;
  66   1      }
  67          
  68          /*****************************************************
  69          *函数名称：void ADC_Interrupt(void) interrupt 6
  70          *函数功能：ADC中断函数
  71          *入口参数：void
  72          *出口参数：void
  73          *****************************************************/
  74          void ADC_Interrupt(void) interrupt 6
  75          {
  76   1              ADCCON &= ~(0X10);  //清中断标志位
  77   1              AdcFlag = 1;
  78   1      }
  79          
  80          /*****************************************************
  81          *函数名称：void ADC_TS_Test(void)
  82          *函数功能：ADC采集温度传感器电压值
  83          *入口参数：void
  84          *出口参数：void
  85          *注意：测试温度时，ADC参考电压要用2.4V
  86          *****************************************************/
  87          void ADC_TS_Test(void)
  88          {
  89   1              uint AD_TS0=0,AD_TS1=0,AD_TSSUM=0;
  90   1              
  91   1              ADCCON = 0x8E;          //开启ADC，ADC采样频率为2M ,ADC输入为温度传感器输出
  92   1              ADCCFG0 = 0x00;   //
  93   1              ADCCFG1 = 0X00;   //
  94   1          TSCFG = 0X80;     //使能温度传感器   
  95   1              while(1)
  96   1              {       
  97   2              Delay(5);
  98   2              TSCFG &= 0xFE;
  99   2                      ADCCON |= 0x40;   //开始ADC转换         
 100   2                      while(!(ADCCON&0x10));
 101   2                      ADCCON &= 0xEF;   //清中断标志位
 102   2              AD_TS0 = ADCVH;
 103   2                      AD_TS0 = (AD_TS0<<4)+(ADCVL>>4);  //第一次温度传感器数值
 104   2                      
 105   2                      TSCFG |= 0X01;
 106   2                      ADCCON |= 0x40;   //开始ADC转换         
 107   2                      while(!(ADCCON&0x10));
 108   2                      ADCCON &= 0xEF;   //清中断标志位
 109   2              AD_TS1 = ADCVH;
 110   2                      AD_TS1 = (AD_TS1<<4)+(ADCVL>>4);  //第二次温度传感器数值
 111   2                      
 112   2                      AD_TSSUM = (AD_TS0+AD_TS1)/2;    //温度传感器数值    
 113   2              }
 114   1      }
 115          
 116          /*****************************************************
C51 COMPILER V9.55   ADC_INIT                                                              01/08/2019 14:28:58 PAGE 3   

 117          *函数名称：uchar Read_IFB_Data(uchar AddOffset)
 118          *函数功能：读取IC在25°的ADC温度采样值
 119          *入口参数：AddOffset
 120          *出口参数：Val
 121          *****************************************************/
 122          uchar Read_IFB_Data(uchar AddOffset)
 123          {
 124   1              uchar Val;
 125   1      
 126   1              EA = 0;                         //关总中断
 127   1              IAPADE = 0x01;          //选择EEPROM区域进行读写操作
 128   1              Val = *(POINT+AddOffset);       
 129   1              IAPADE = 0x00;          //返回ROM区域
 130   1              EA = 1;                         //开总中断
 131   1              return Val;     
 132   1      }
 133          
 134          void Delay(uint time)
 135          {
 136   1          uint i = 0;
 137   1          for(i=0; i<10; i++)
 138   1          for(; time>0; time--)
 139   1          ;
 140   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    345    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
