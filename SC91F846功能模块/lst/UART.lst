C51 COMPILER V9.03   UART                                                                  04/27/2017 11:09:07 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\output\UART.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE c\UART.C BROWSE DEBUG OBJECTEXTEND PRINT(.\lst\UART.lst) OBJECT(.\output\UA
                    -RT.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c) 深圳市赛元微电子有限公司
   3          //      文件名称        :
   4          //      作者            : 
   5          //      模块功能        : 
   6          //      局部函数列表:
   7          //  最后更正日期:
   8          //      版本            :
   9          //      更改记录        :rom前256byte禁止查表,因此在编译的时候，设置keil->option for Target->BL51 Locate->Code Range:
             -0x100
  10          //*************************************************************
  11          /****************************************************************/
  12          //SM0=0  工作模式1  1起始位 8数据位 1停止位  波特率可变
  13          //SM0=1  工作模式3  1起始位 8数据位 1个可编程的第9位1停止位  波特率可变
  14          //SM2   只对工作模式3有效，
  15          //TI：发送中断位  TI=1 发送完成，软件置0
  16          //RI：接收中断位  RI=1 接收完成，软件置0
  17          //REN：接收使能   0:不允许接收数据 1:允许接收数据
  18          //SBUF：数据缓冲区       一个发送移位寄存器和一个接收锁存器
  19          //BAUDGL/BAUDGH 共14位 总大小16384 
  20          //BAUDGH=x/256;         //16M 9600波特率 则BAUDG=417;
  21          //BAUDGL=x%256;                   4800波特率 则BAUDG=844;
  22          //                                               19200波特率 则BAUDG=209;
  23          //RXD P12
  24          //TXD P13
  25          /****************************************************************/
  26          
  27          #include "h\sc91f846_C.h"
  28          #define uchar unsigned char 
  29          #define LED0 P02
  30          #define LED1 P03
  31          #define LED2 P04
  32          #define LED3 P05
  33          bit flag;                       
  34          bit RI_FLAG=0; 
  35          unsigned char i; 
  36          
  37          void IOinit(void )
  38          {       
  39   1              P0CFG0=0x55;      //P02,P03强推挽输出
  40   1              P0CFG1=0x05;      //P04,P05强推挽输出
  41   1              P1CFG0=0X40;      //RXD准双向输出高  TXD强推挽
  42   1              P12=1;
  43   1      }
  44          
  45          void init_uart_mode1(void)
  46          {
  47   1              SM0=0;                                          //模式1
  48   1              REN=1;                                          //允许接收
  49   1              EA=1;                                           //打开总中断
  50   1              EUART=1;                                        //开启串口中断
  51   1              BAUDGH=417/256;                         //16M 9600波特率 则BAUDG=417（392~443）;
  52   1              BAUDGL=417%256;                         //设置波特率的值
  53   1              BAUDGH=BAUDGH|0x80;                     //开启波特率
C51 COMPILER V9.03   UART                                                                  04/27/2017 11:09:07 PAGE 2   

  54   1      }
  55          void uart()interrupt 4
  56          {       
  57   1              if(TI)
  58   1              {
  59   2                      TI=0;           //中断进来要把TI清0
  60   2              }
  61   1              if(RI)                  //接收中断
  62   1              {
  63   2                      RI=0;           //中断进来要把RI清0     
  64   2                      RI_FLAG=1;
  65   2              }
  66   1      }
  67          void main()
  68          {
  69   1              RSTCFG=0X2A;                             //切换RstPin为GPIO,lvr选择3.5V复位
  70   1              WDTCR = 0x90;                           //1--1 -- 00    开WDT,WDT清0,WDT 262ms溢出;烧录时，可Code Option选择ENWDT
  71   1              IOinit();
  72   1              init_uart_mode1();
  73   1              while(1)
  74   1              {
  75   2                      WDTCR = 0x90;                           //1--1 -- 00    开WDT,WDT清0,WDT 262ms溢出;烧录时，可Code Option选择ENWDT               
  76   2                      if(RI_FLAG)                     //接收中断
  77   2                      {
  78   3                              RI_FLAG=0;
  79   3                              i=SBUF;         //把SBUF 数据赋值给i            
  80   3                              switch(i)       //判断接收的值是否正确
  81   3                              {
  82   4                                      case 0x01: LED0=~LED0;break;
  83   4                                      case 0x02: LED1=~LED1;break;
  84   4                                      case 0x03: LED2=~LED2;break;
  85   4                                      case 0x04: LED3=~LED3;break;
  86   4                                      default: break; 
  87   4                              } 
  88   3                              flag=1;         //收完一帧数据时则进行发送
  89   3                      }       
  90   2      
  91   2                      if(flag==1)
  92   2                      {
  93   3                              EUART=0;                //发送数据之前要把串口中断关掉
  94   3                              flag=0;                 //让接收下一数据时置1
  95   3                              SBUF=i;                 //把i数据发送到SBUF中
  96   3                              while(!TI);             //等待发送完成
  97   3                              EUART=1;                //打开中断进行下一个数据的接收
  98   3                      }
  99   2      
 100   2              }
 101   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    115    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
