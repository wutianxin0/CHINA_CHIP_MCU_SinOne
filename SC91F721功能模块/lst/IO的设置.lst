C51 COMPILER V9.03   IO的设置                                                              06/25/2013 13:53:57 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE IO的设置
OBJECT MODULE PLACED IN .\output\IO的设置.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE c\IO的设置.c BROWSE DEBUG OBJECTEXTEND PRINT(.\lst\IO的设置.lst) OBJECT(.\o
                    -utput\IO的设置.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c) 深圳市赛元微电子有限公司
   3          //      文件名称        : IO_Set.c
   4          //      作者            : 
   5          //      模块功能        : IO常用设置
   6          //      局部函数列表:
   7          //  最后更正日期:
   8          //      版本            :
   9          //      更改记录        :722 rom前256byte禁止查表,因此在编译的时候，设置keil->option for Target->BL51 Locate->Code Ra
             -nge:0x100
  10          //*************************************************************
  11          #include "h\sc91f722_C.h"
  12          
  13          //============================
  14          //模块内宏定义
  15          //============================
  16          #define         BS(SFR,NUM)             (SFR|=(1<<NUM))             //位置1
  17          #define         BC(SFR,NUM)             (SFR&=~(1<<NUM))                  //位清0
  18          //============================
  19          //按键输入，使用准双向模式时，需要切换为准双向模式，并对该IO口写1,输出则选择强推挽模式
  20          //============================
  21          #define         SET(SFR,NUM)    (SFR = NUM)     
  22          
  23          //=========================P1、P2、P3  准双向IO设置=========================================//
  24          #define         P10M                                    (BC(P1CFG0,0),BC(P1CFG0,1))                                                     //设置P10为准双向IO
  25          #define         P11M                                    (BC(P1CFG0,2),BC(P1CFG0,3))                                                      //设置P11为准双向IO
  26          #define         P12M                                    (BC(P1CFG0,4),BC(P1CFG0,5))                                                     //设置P12为准双向IO
  27          #define         P13M                                    (BC(P1CFG0,6),BC(P1CFG0,7))                                                     //设置P13为准双向IO
  28          #define         P14M                                    (BC(P1CFG1,0),BC(P1CFG1,1))                                                     //设置P14为准双向IO
  29          #define         P15M                                    (BC(P1CFG1,2),BC(P1CFG1,3))                                                      //设置P15为准双向IO
  30          #define         P16M                                    (BC(P1CFG1,4),BC(P1CFG1,5))                                                     //设置P16为准双向IO
  31          #define         P17M                                    (BC(P1CFG1,6),BC(P1CFG1,7))                                                     //设置P17为准双向IO
  32          
  33          #define         P20M                                    (BC(P2CFG0,0),BC(P2CFG0,1))                                                     //设置P20为准双向IO
  34          #define         P21M                                    (BC(P2CFG0,2),BC(P2CFG0,3))                                                     //设置P21为准双向IO
  35          
  36          #define         P30M                                    (BC(P3CFG0,0),BC(P3CFG0,1))                                                     //设置P30为准双向IO
  37          #define         P31M                                    (BC(P3CFG0,2),BC(P3CFG0,3))                                                     //设置P31为准双向IO
  38          #define         P32M                                    (BC(P3CFG0,4),BC(P3CFG0,5))                                                     //设置P32为准双向IO
  39          #define         P33M                                    (BC(P3CFG0,6),BC(P3CFG0,7))                                                     //设置P33为准双向IO
  40          #define         P34M                                    (BC(P3CFG1,0),BC(P3CFG1,1))                                                     //设置P34为准双向IO
  41          #define         P35M                                    (BC(P3CFG1,2),BC(P3CFG1,3))                                                     //设置P35为准双向IO
  42          #define         P36M                                    (BC(P3CFG1,4),BC(P3CFG1,5))                                                     //设置P36为准双向IO
  43          #define         P37M                                    (BC(P3CFG1,6),BC(P3CFG1,7))                                                     //设置P37为准双向IO     
  44          
  45          //=========================P1、P2、P3  强推挽IO设置=========================================//
  46          
  47          #define         P10PM                                   (BS(P1CFG0,0),BC(P1CFG0,1))                                                     //设置P10为强推挽IO
  48          #define         P11PM                                   (BS(P1CFG0,2),BC(P1CFG0,3))                                                      //设置P11为强推挽IO
  49          #define         P12PM                                   (BS(P1CFG0,4),BC(P1CFG0,5))                                                     //设置P12为强推挽IO
  50          #define         P13PM                                   (BS(P1CFG0,6),BC(P1CFG0,7))                                                     //设置P13为强推挽IO
  51          #define         P14PM                                   (BS(P1CFG1,0),BC(P1CFG1,1))                                                     //设置P14为强推挽IO
  52          #define         P15PM                                   (BS(P1CFG1,2),BC(P1CFG1,3))                                                      //设置P15为强推挽IO
  53          #define         P16PM                                   (BS(P1CFG1,4),BC(P1CFG1,5))                                                     //设置P16为强推挽IO
C51 COMPILER V9.03   IO的设置                                                              06/25/2013 13:53:57 PAGE 2   

  54          #define         P17PM                                   (BS(P1CFG1,6),BC(P1CFG1,7))                                                     //设置P17为强推挽IO
  55          
  56          #define         P20PM                                   (BS(P2CFG0,0),BC(P2CFG0,1))                                                     //设置P20为强推挽IO
  57          #define         P21PM                                   (BS(P2CFG0,2),BC(P2CFG0,3))                                                     //设置P21为强推挽IO
  58          
  59          #define         P30PM                                   (BS(P3CFG0,0),BC(P3CFG0,1))                                                     //设置P30为强推挽IO
  60          #define         P31PM                                   (BS(P3CFG0,2),BC(P3CFG0,3))                                                     //设置P31为强推挽IO
  61          #define         P32PM                                   (BS(P3CFG0,4),BC(P3CFG0,5))                                                     //设置P32为强推挽IO
  62          #define         P33PM                                   (BS(P3CFG0,6),BC(P3CFG0,7))                                                     //设置P33为强推挽IO
  63          #define         P34PM                                   (BS(P3CFG1,0),BC(P3CFG1,1))                                                     //设置P34为强推挽IO
  64          #define         P35PM                                   (BS(P3CFG1,2),BC(P3CFG1,3))                                                     //设置P35为强推挽IO
  65          #define         P36PM                                   (BS(P3CFG1,4),BC(P3CFG1,5))                                                     //设置P36为强推挽IO
  66          #define         P37PM                                   (BS(P3CFG1,6),BC(P3CFG1,7))                                                     //设置P37为强推挽IO
  67          
  68          //=========================P1、P2、P3  高阻态(仅输入)IO设置=========================================//
  69          
  70          #define         P10IM                                   (BC(P1CFG0,0),BS(P1CFG0,1))                                                     //设置P10为高阻态IO
  71          #define         P11IM                                   (BC(P1CFG0,2),BS(P1CFG0,3))                                                      //设置P11为高阻态IO
  72          #define         P12IM                                   (BC(P1CFG0,4),BS(P1CFG0,5))                                                     //设置P12为高阻态IO
  73          #define         P13IM                                   (BC(P1CFG0,6),BS(P1CFG0,7))                                                     //设置P13为高阻态IO
  74          #define         P14IM                                   (BC(P1CFG1,0),BS(P1CFG1,1))                                                     //设置P14为高阻态IO
  75          #define         P15IM                                   (BC(P1CFG1,2),BS(P1CFG1,3))                                                      //设置P15为高阻态IO
  76          #define         P16IM                                   (BC(P1CFG1,4),BS(P1CFG1,5))                                                     //设置P16为高阻态IO
  77          #define         P17IM                                   (BC(P1CFG1,6),BS(P1CFG1,7))                                                     //设置P17为高阻态IO
  78          
  79          #define         P20IM                                   (BC(P2CFG0,0),BS(P2CFG0,1))                                                     //设置P20为高阻态IO
  80          #define         P21IM                                   (BC(P2CFG0,2),BS(P2CFG0,3))                                                     //设置P21为高阻态IO
  81          
  82          #define         P30IM                                   (BC(P3CFG0,0),BS(P3CFG0,1))                                                     //设置P30为高阻态IO
  83          #define         P31IM                                   (BC(P3CFG0,2),BS(P3CFG0,3))                                                     //设置P31为高阻态IO
  84          #define         P32IM                                   (BC(P3CFG0,4),BS(P3CFG0,5))                                                     //设置P32为高阻态IO
  85          #define         P33IM                                   (BC(P3CFG0,6),BS(P3CFG0,7))                                                     //设置P33为高阻态IO
  86          #define         P34IM                                   (BC(P3CFG1,0),BS(P3CFG1,1))                                                     //设置P34为高阻态IO
  87          #define         P35IM                                   (BC(P3CFG1,2),BS(P3CFG1,3))                                                     //设置P35为高阻态IO
  88          #define         P36IM                                   (BC(P3CFG1,4),BS(P3CFG1,5))                                                     //设置P36为高阻态IO
  89          #define         P37IM                                   (BC(P3CFG1,6),BS(P3CFG1,7))                                                     //设置P37为高阻态IO
  90          
  91          //=========================P1、P2、P3  开漏输出IO设置=========================================//
  92          
  93          #define         P10OM                                   (BS(P1CFG0,0),BS(P1CFG0,1))                                                     //设置P10为开漏输出IO
  94          #define         P11OM                                   (BS(P1CFG0,2),BS(P1CFG0,3))                                                      //设置P11为开漏输出IO
  95          #define         P12OM                                   (BS(P1CFG0,4),BS(P1CFG0,5))                                                     //设置P12为开漏输出IO
  96          #define         P13OM                                   (BS(P1CFG0,6),BS(P1CFG0,7))                                                     //设置P13为开漏输出IO
  97          #define         P14OM                                   (BS(P1CFG1,0),BS(P1CFG1,1))                                                     //设置P14为开漏输出IO
  98          #define         P15OM                                   (BS(P1CFG1,2),BS(P1CFG1,3))                                                      //设置P15为开漏输出IO
  99          #define         P16OM                                   (BS(P1CFG1,4),BS(P1CFG1,5))                                                     //设置P16为开漏输出IO
 100          #define         P17OM                                   (BS(P1CFG1,6),BS(P1CFG1,7))                                                     //设置P17为开漏输出IO
 101          
 102          #define         P20OM                                   (BS(P2CFG0,0),BS(P2CFG0,1))                                                     //设置P20为开漏输出IO
 103          #define         P21OM                                   (BS(P2CFG0,2),BS(P2CFG0,3))                                                     //设置P21为开漏输出IO
 104          
 105          #define         P30OM                                   (BS(P3CFG0,0),BS(P3CFG0,1))                                                     //设置P30为开漏输出IO
 106          #define         P31OM                                   (BS(P3CFG0,2),BS(P3CFG0,3))                                                     //设置P31为开漏输出IO
 107          #define         P32OM                                   (BS(P3CFG0,4),BS(P3CFG0,5))                                                     //设置P32为开漏输出IO
 108          #define         P33OM                                   (BS(P3CFG0,6),BS(P3CFG0,7))                                                     //设置P33为开漏输出IO
 109          #define         P34OM                                   (BS(P3CFG1,0),BS(P3CFG1,1))                                                     //设置P34为开漏输出IO
 110          #define         P35OM                                   (BS(P3CFG1,2),BS(P3CFG1,3))                                                     //设置P35为开漏输出IO
 111          #define         P36OM                                   (BS(P3CFG1,4),BS(P3CFG1,5))                                                     //设置P36为开漏输出IO
 112          #define         P37OM                                   (BS(P3CFG1,6),BS(P3CFG1,7))                                                     //设置P37为开漏输出IO
 113          
 114          //=========================P1、P2、P3 准双向IO设置输入=========================================//
 115          #define         P10MI                                   (BC(P1CFG0,0),BC(P1CFG0,1),SET(P10,1))                          //设置P10为准双向IO输入
C51 COMPILER V9.03   IO的设置                                                              06/25/2013 13:53:57 PAGE 3   

 116          #define         P11MI                                   (BC(P1CFG0,2),BC(P1CFG0,3),SET(P11,1))                          //设置P11为准双向IO输入
 117          #define         P12MI                                   (BC(P1CFG0,4),BC(P1CFG0,5),SET(P12,1))                          //设置P12为准双向IO输入
 118          #define         P13MI                                   (BC(P1CFG0,6),BC(P1CFG0,7),SET(P13,1))                          //设置P13为准双向IO输入
 119          #define         P14MI                                   (BC(P1CFG1,0),BC(P1CFG1,1),SET(P14,1))                          //设置P14为准双向IO输入
 120          #define         P15MI                                   (BC(P1CFG1,2),BC(P1CFG1,3),SET(P15,1))                          //设置P15为准双向IO输入
 121          #define         P16MI                                   (BC(P1CFG1,4),BC(P1CFG1,5),SET(P16,1))                          //设置P16为准双向IO输入
 122          #define         P17MI                                   (BC(P1CFG1,6),BC(P1CFG1,7),SET(P17,1))                          //设置P17为准双向IO输入
 123          
 124          #define         P20MI                                   (BC(P2CFG0,0),BC(P2CFG0,1),SET(P20,1))                          //设置P20为准双向IO输入
 125          #define         P21MI                                   (BC(P2CFG0,2),BC(P2CFG0,3),SET(P21,1))                          //设置P21为准双向IO输入
 126          
 127          #define         P30MI                                   (BC(P3CFG0,0),BC(P3CFG0,1),SET(P30,1))                          //设置P30为准双向IO输入
 128          #define         P31MI                                   (BC(P3CFG0,2),BC(P3CFG0,3),SET(P31,1))                          //设置P31为准双向IO输入
 129          #define         P32MI                                   (BC(P3CFG0,4),BC(P3CFG0,5),SET(P32,1))                          //设置P32为准双向IO输入
 130          #define         P33MI                                   (BC(P3CFG0,6),BC(P3CFG0,7),SET(P33,1))                          //设置P33为准双向IO输入
 131          #define         P34MI                                   (BC(P3CFG1,0),BC(P3CFG1,1),SET(P34,1))                          //设置P34为准双向IO输入
 132          #define         P35MI                                   (BC(P3CFG1,2),BC(P3CFG1,3),SET(P35,1))                          //设置P35为准双向IO输入
 133          #define         P36MI                                   (BC(P3CFG1,4),BC(P3CFG1,5),SET(P36,1))                          //设置P36为准双向IO输入
 134          #define         P37MI                                   (BC(P3CFG1,6),BC(P3CFG1,7),SET(P37,1))                          //设置P37为准双向IO输入
 135          
 136          //*************************************************************
 137          // 函数名       ：void main()
 138          // 作者         ：
 139          // 功能         ：主函数
 140          // 参数         ：无
 141          // 返回值       ：无
 142          // 调用全局变量：无
 143          // 修改全局变量：无
 144          // 备注         ：
 145          //**************************************************************
 146          void main()
 147          {
 148   1              RSTCFG=0x2A;                            //RSTpin切换GPIO,lvr 选择3.5V复位
 149   1              WDTCR = 0x90;                           //1--1 -- 00    开WDT,WDT清0,8M WDT 524.288ms溢出;烧录时，可Code Option选择ENWDT
 150   1              P17MI;                                     //按键输入
 151   1              P17PM;                                     //显示输出
 152   1              while(1)
 153   1              {
 154   2                      WDTCR = 0x90;                           //1--1 -- 00    开WDT,WDT清0,8M WDT 524.288ms溢出;烧录时，可Code Option选择ENWDT        
 155   2              }
 156   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     25    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
